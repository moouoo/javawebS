<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javawebS.dao.StudyDAO">
  
  <select id="getMemberMidSearch" resultType="com.spring.javawebS.vo.MemberVO">
    select * from member where name = #{name};
  </select>
  
  <select id="getMemberMidSearch2" resultType="com.spring.javawebS.vo.MemberVO">
    select * from member where name like concat('%',#{name},'%') order by name;
  </select>
  
  <select id="getUserList" resultType="com.spring.javawebS.vo.UserVO">
    select * from user order by idx desc;
  </select>
  
  <select id="getQrCodeSearch" resultType="com.spring.javawebS.vo.QrCodeVO">
    select * from qrCode where qrCodeName = #{qrCode};
  </select>
  
  <select id="setTransactionUserList" resultType="com.spring.javawebS.vo.TransactionVO">
    <!-- <if test='userSelect != "user"'>select * from user2 order by idx desc;</if> -->
    select * from ${userSelect};
  </select>
  
  <select id="getRecentlyVisitCount" resultType="com.spring.javawebS.vo.ChartVO">
    <if test="i == 1">
    	select substring(visitDate,1,10) as visitDate,visitCount from visit order by visitDate desc limit 7;
    </if>
    <if test="i == 2">
	    select mid as visitDate,visitCnt as visitCount from member2 order by visitCnt desc limit 7;
    </if>
  </select>
  
  
  
  <insert id="setUserInput">
    insert into user values (default,#{vo.mid},#{vo.name},#{vo.age},#{vo.address});
  </insert>
  
  <insert id="setQrCreateDB">
    insert into qrCode values (default,#{vo.mid},#{vo.name},#{vo.email},#{vo.movieName},#{vo.movieDate},#{vo.movieTime},#{vo.movieAdult},#{vo.movieChild},#{vo.publishNow},#{vo.qrCodeName});
  </insert>
  
  <insert id="setTransactionUserInput1">
    insert into user values (default,#{vo.mid},#{vo.name},#{vo.age},#{vo.address});
  </insert>
  
  <insert id="setTransactionUserInput2">
    insert into user2 values (#{vo.mid},#{vo.nickName},#{vo.job});
  </insert>
  
  <insert id="setTransactionUserInput">
    insert into user values (default,#{vo.mid},#{vo.name},#{vo.age},#{vo.address});
    insert into user2 values (#{vo.mid},#{vo.nickName},#{vo.job});
  </insert>
  
  
  
  
  <delete id="setUserDelete">
    delete from user where idx = #{idx};
  </delete>
  
</mapper>